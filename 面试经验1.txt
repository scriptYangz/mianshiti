web部分
1.http协议请求与响应？
答：http请求由三部分组成，请求行，请求头，（空行），请求正文。http响应由三部分组成，状态行，消息报文，（空行），响应正文。
http请求行由请求方法+url+http协议版本，请求头部由键值对组成。

2.get与post的区别？
区别一：
get重点在从服务器上获取资源，post重点在向服务器发送数据；
区别二：
get传输数据是通过URL请求，以field（字段）= value的形式，置于URL后，并用"?"连接，多个请求数据间用"&"连接，如http://127.0.0.1/Test/login.action?name=admin&password=admin，这个过程用户是可见的；
post传输数据通过Http的post机制，将字段与对应值封存在请求实体中发送给服务器，这个过程对用户是不可见的；
区别三：
Get传输的数据量小，因为受URL长度限制，但效率较高；
Post可以传输大量数据，所以上传文件时只能用Post方式；
区别四：
get是不安全的，因为URL是可见的，可能会泄露私密信息，如密码等；
post较get安全性较高；
区别五：
get方式只能支持ASCII字符，向服务器传的中文字符可能会乱码。
post支持标准字符集，可以正确传递中文字符。




html部分
1.如何理解html语义化？


css部分
1.清除浮动？
.clearfix:after{
　          content:"";//设置内容为空

　　　　　　height:0;//高度为0

　　　　　　line-height:0;//行高为0

　　　　　　display:block;//将文本转为块级元素

　　　　　　visibility:hidden;//将元素隐藏

　　　　　　clear:both//清除浮动 
}
　　　　.clearfix{

　　　　　　zoom:1;为了兼容IE

　　　　}



  (还有overflow：hidden 和 在浮动元素后加一个元素clear：both)

2.css选择器有哪些，优先级怎么算？

3.


js部分
1.js假值?
null、undefined、NAN、0、false、""

2.js原始类型?
string/boolean/number/null/undefined(其他类型都是object)

3.强制类型转换（显式转换）和隐式类型转换？
强制类型转换就是需要手动将一种类型强制转换为另一种类型。
转换为数值类型：Number(mix)、parseInt(string,radix)、parseFloat(string)
转换为字符串类型：toString(radix)、String(mix)
转换为布尔类型：Boolean(mix)

隐式转换：js自动类型转换
关系操作符（<, >, <=, >=）
相等操作符（==）
乘除、减号运算符、取模运算符
。。。

4.事件委托？
事件委托就是利用事件冒泡，只指定一个事件处理程序，就可以管理某一类型的所有事件

5.跨域解决方案                      
  通过jsonp跨域
  document.domain + iframe跨域
  location.hash + iframe
  window.name + iframe跨域
  postMessage跨域
  跨域资源共享（CORS）
  nginx代理跨域
  nodejs中间件代理跨域
  WebSocket协议跨域

架构部分
1.模块化规范？
AMD、CMD
AMD

2.前端开发的优化方法？
网页内容：
减少http请求次数
减少DNS查询次数
避免页面跳转
缓存Ajax
减少DOM元素数量
减少iframe数量
避免404
 
 
服务器：
使用CDN
增加Expires Header
Gzip压缩传输文件
避免空的图片src
使用GET ajax请求
尽早flush输出
 
Cookie：
减少cookie大小
页面内容使用无cookie域名
 
CSS：
将样式表置顶
避免css表达式
用link代替@import
避免使用Filter
 
js：
将脚本置地
使用外部js和css文件
精简js和css文件（压缩）
去除重复脚本
减少DOM访问
使用智能事件处理
 
图片：
优化图像
优化css sprite
不要在html中缩放图片
使用小且可缓存的favicon.ico